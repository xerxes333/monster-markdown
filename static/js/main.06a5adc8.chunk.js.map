{"version":3,"sources":["components/queryResults/queryResults.jsx","components/app/utils.js","components/clipboard/clipboard.jsx","components/search/search.jsx","components/app/app.jsx","serviceWorker.js","index.js"],"names":["QueryResults","props","results","setText","useState","slug","setSlug","listItems2","map","result","k","MenuItem","value","key","name","useEffect","length","classes","makeStyles","theme","select","marginBottom","spacing","useStyles","FormControl","fullWidth","className","color","InputLabel","id","Select","labelId","onChange","event","target","_find","variant","autoFocus","saves","crTable","cr","xp","sign","num","abilityMod","ability","Math","floor","doubleSpace","list","newList","forEach","v","i","push","mash","data","txt","size","alignment","armor_class","armor_desc","hit_points","speed","walk","fly","swim","strength","dexterity","constitution","intelligence","wisdom","charisma","saving","obj","save","substr","toUpperCase","filter","s","_join","savingThrows","skills","_each","val","_upperFirst","damage_immunities","condition_immunities","senses","languages","challenge_rating","special_abilities","concat","abilities","regex","regex2","desc","replace","specialAbilities","actions","action","ln","Clipboard","text","mdText","useRef","button","Button","onClick","e","current","document","execCommand","blur","Typography","gutterBottom","Link","href","rel","TextField","multiline","inputRef","Search","setQueryResults","query","setQuery","root","padding","display","alignItems","input","marginLeft","flex","iconButton","Paper","component","onSubmit","preventDefault","fetch","then","res","json","catch","error","console","log","InputBase","placeholder","inputProps","IconButton","type","aria-label","App","darkTheme","createMuiTheme","palette","queryResults","ThemeProvider","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.06a5adc8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { InputLabel, FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport _find from \"lodash/find\";\r\n\r\nfunction QueryResults(props) {\r\n  const { results, setText } = props;\r\n  const [slug, setSlug] = useState(\"\");\r\n\r\n  const listItems2 = results.map((result, k) => {\r\n    return (\r\n      <MenuItem value={result.slug} key={result.slug}>\r\n        {result.name}\r\n      </MenuItem>\r\n    );\r\n  });\r\n\r\n  /**\r\n   * TODO: I don't like this implementation\r\n   *\r\n   * What I want to have happen is when the list of options\r\n   * is created to automatically pic the first one\r\n   * but not interfere with normal select changes\r\n   */\r\n  useEffect(() => {\r\n    if (listItems2.length === 1) {\r\n      setSlug(results[0].slug);\r\n      setText(results[0]);\r\n    }\r\n  }, [listItems2, results, setText]);\r\n\r\n  const handleChange = (event) => {\r\n    setSlug(event.target.value);\r\n    setText(_find(results, [\"slug\", event.target.value]));\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    select: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <FormControl fullWidth className={classes.select} color=\"secondary\">\r\n        <InputLabel id=\"simple-select-label\">Creature</InputLabel>\r\n        <Select\r\n          labelId=\"simple-select-label\"\r\n          id=\"simple-select\"\r\n          value={slug}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          {listItems2}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QueryResults;\r\n","/**\r\n * TODO: I'm sure there is a more elegant way to do this but\r\n * this is where I am right now so ¯\\_(ツ)_/¯\r\n */\r\nimport _each from \"lodash/each\";\r\nimport _find from \"lodash/find\";\r\nimport _join from \"lodash/join\";\r\nimport _upperFirst from \"lodash/upperFirst\";\r\n\r\nconst line = `___`;\r\nconst saves = [\r\n  \"strength_save\",\r\n  \"dexterity_save\",\r\n  \"constitution_save\",\r\n  \"intelligence_save\",\r\n  \"wisdom_save\",\r\n  \"charisma_save\",\r\n];\r\nconst crTable = [\r\n  { cr: \"1/8\", xp: 25 },\r\n  { cr: \"1/4\", xp: 50 },\r\n  { cr: \"1/2\", xp: 100 },\r\n  { cr: \"1\", xp: 200 },\r\n  { cr: \"2\", xp: 450 },\r\n  { cr: \"3\", xp: 700 },\r\n  { cr: \"4\", xp: 1100 },\r\n  { cr: \"5\", xp: 1800 },\r\n  { cr: \"6\", xp: 2300 },\r\n  { cr: \"7\", xp: 2900 },\r\n  { cr: \"8\", xp: 3900 },\r\n  { cr: \"9\", xp: 5000 },\r\n  { cr: \"10\", xp: 5900 },\r\n  { cr: \"11\", xp: 7200 },\r\n  { cr: \"12\", xp: 8400 },\r\n  { cr: \"14\", xp: 11500 },\r\n  { cr: \"13\", xp: 10000 },\r\n  { cr: \"15\", xp: 13000 },\r\n  { cr: \"16\", xp: 15000 },\r\n  { cr: \"17\", xp: 18000 },\r\n  { cr: \"18\", xp: 20000 },\r\n  { cr: \"19\", xp: 22000 },\r\n  { cr: \"20\", xp: 25000 },\r\n  { cr: \"21\", xp: 33000 },\r\n  { cr: \"22\", xp: 41000 },\r\n  { cr: \"23\", xp: 50000 },\r\n  { cr: \"24\", xp: 62000 },\r\n  { cr: \"25\", xp: 75000 },\r\n  { cr: \"26\", xp: 90000 },\r\n  { cr: \"27\", xp: 105000 },\r\n  { cr: \"28\", xp: 120000 },\r\n  { cr: \"29\", xp: 135000 },\r\n  { cr: \"30\", xp: 155000 },\r\n];\r\n\r\n/**\r\n * Prefix the + sign for positive\r\n * @param {number} num\r\n * @return {(string|number)}\r\n */\r\nconst sign = (num) => {\r\n  return 0 < num ? `+${num}` : num;\r\n};\r\n\r\n/**\r\n * Calculates ability modifiers for ability scores\r\n * @param {number} ability\r\n * @return {string}\r\n */\r\nconst abilityMod = (ability) => {\r\n  const num = Math.floor((ability - 10) / 2);\r\n  return sign(num);\r\n};\r\n\r\n/**\r\n * Searches entire result object for all saving throws\r\n * and parses them in short format then filters all null records.\r\n * @param {object} obj\r\n * @return {string} Returns comma separated string of all saving throws\r\n */\r\nconst savingThrows = (obj) => {\r\n  const list = saves\r\n    .map((save) => {\r\n      return obj[save]\r\n        ? save.substr(0, 3).toUpperCase() + \" \" + sign(obj[save])\r\n        : null;\r\n    })\r\n    .filter((s) => s);\r\n\r\n  return _join(list, \", \");\r\n};\r\n\r\n/**\r\n * Parses skills found in the child skills object.\r\n * @param {Object.<string>} skills\r\n * @return {string} Returns comma separated string of all skills\r\n */\r\nconst skills = (skills) => {\r\n  let list = [];\r\n  _each(skills, (val, key) => {\r\n    list.push(`${_upperFirst(key)} ${sign(val)}`);\r\n  });\r\n  return _join(list, \", \");\r\n};\r\n\r\n/**\r\n * Parse special abilities\r\n * @param {Array.<Object>.<string>} abilities\r\n * @return {string} Returns custom markdown formatted string\r\n */\r\nconst specialAbilities = (abilities) => {\r\n  const regex = /\\n\\n|\\n/gi;\r\n  const regex2 = /\\*/gi;\r\n  const list = abilities.map((ability) => {\r\n    return `***${ability.name}.*** ${ability.desc\r\n      .replace(regex, \"\\n>\\n>\")\r\n      .replace(regex2, \"\\\\*\")}`;\r\n  });\r\n  return doubleSpace(list);\r\n};\r\n\r\n/**\r\n * Parse actions\r\n * @param {*} actions\r\n * @return {string} Returns custom markdown formatted string\r\n */\r\nconst actions = (actions) => {\r\n  const list = actions.map((action) => {\r\n    const regex = /((melee)|(ranged)).*(weapon attack:)/gi;\r\n\r\n    return `***${action.name}.*** ${action.desc.replace(regex, \"*$&*\")}`;\r\n  });\r\n  return doubleSpace(list);\r\n};\r\n\r\n/**\r\n * Double space\r\n * @param {Array.<string>} list\r\n */\r\nconst doubleSpace = (list) => {\r\n  let newList = [];\r\n\r\n  list.forEach((v, i) => {\r\n    if (i > 0) {\r\n      newList.push(\"\");\r\n    }\r\n    newList.push(v);\r\n  });\r\n\r\n  return newList;\r\n};\r\n\r\n/**\r\n * Combines all the markdown parsed sections the final text\r\n * @param {Object.<string>} data\r\n * @return {string} Returns markdown text string from response object\r\n */\r\nconst mash = (data) => {\r\n  let txt = [];\r\n\r\n  txt.push(line);\r\n  txt.push(line);\r\n  txt.push(`## ${data.name}`);\r\n  txt.push(`*${data.size}, ${data.alignment}*`);\r\n\r\n  txt.push(line);\r\n  txt.push(`- **Armor Class** ${data.armor_class} (${data.armor_desc})`);\r\n  txt.push(`- **Hit Points** ${data.hit_points}`);\r\n\r\n  const speed =\r\n    `- **Speed** ${data.speed.walk}ft.` +\r\n    (data.speed.fly ? `, fly ${data.speed.fly}ft.` : \"\") +\r\n    (data.speed.swim ? `, swim ${data.speed.swim}ft.` : \"\");\r\n  txt.push(speed);\r\n\r\n  txt.push(line);\r\n  txt.push(`|  STR  |  DEX  |  CON  |  INT  |  WIS  |  CHA  |`);\r\n  txt.push(`|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|`);\r\n  txt.push(\r\n    `|${data.strength} (${abilityMod(data.strength)})|` +\r\n      `${data.dexterity} (${abilityMod(data.dexterity)})|` +\r\n      `${data.constitution} (${abilityMod(data.constitution)})|` +\r\n      `${data.intelligence} (${abilityMod(data.intelligence)})|` +\r\n      `${data.wisdom} (${abilityMod(data.wisdom)})|` +\r\n      `${data.charisma} (${abilityMod(data.charisma)})|`\r\n  );\r\n\r\n  txt.push(line);\r\n  const saving = savingThrows(data);\r\n  if (saving) txt.push(`- **Saving Throws** ${saving}`);\r\n  txt.push(`- **Skills** ${skills(data.skills)}`);\r\n\r\n  if (data.damage_immunities)\r\n    txt.push(`- **Damage Immunities** ${data.damage_immunities}`);\r\n  if (data.condition_immunities)\r\n    txt.push(`- **Condition Immunities** ${data.condition_immunities}`);\r\n  txt.push(`- **Senses** ${data.senses}`);\r\n  txt.push(`- **Languages** ${data.languages}`);\r\n\r\n  const xp = _find(crTable, [\"cr\", data.challenge_rating]).xp;\r\n  txt.push(`- **Challenge** ${data.challenge_rating} (${xp}xp)`);\r\n\r\n  txt.push(line);\r\n\r\n  if (data.special_abilities) {\r\n    // txt.push(`### Special Abilities`);\r\n    txt = txt.concat(specialAbilities(data.special_abilities));\r\n  }\r\n\r\n  if (data.actions) {\r\n    txt.push(`### Actions`);\r\n    txt = txt.concat(actions(data.actions));\r\n  }\r\n\r\n  const output = _join(\r\n    txt.map((ln, i) => {\r\n      if (i <= 1) return ln;\r\n      return `>${ln}`;\r\n    }),\r\n    \"\\n\"\r\n  );\r\n\r\n  return output;\r\n};\r\n\r\nexport { mash };\r\n","import React, { useRef } from \"react\";\r\nimport { Button, Link, TextField, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { mash } from \"../app/utils\";\r\n\r\nfunction Clipboard(props) {\r\n  const { text } = props;\r\n  const mdText = useRef(null);\r\n\r\n  const clip = (e) => {\r\n    mdText.current.select();\r\n    document.execCommand(\"copy\");\r\n    mdText.current.blur();\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={clip}\r\n        fullWidth=\"true\"\r\n        className={classes.button}\r\n      >\r\n        Copy to Clipboard\r\n      </Button>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        Then paste here:\r\n        <Link\r\n          href=\"https://homebrewery.naturalcrit.com/new\"\r\n          color=\"secondary\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          https://homebrewery.naturalcrit.com/new\r\n        </Link>\r\n      </Typography>\r\n      <TextField\r\n        multiline={true}\r\n        variant=\"outlined\"\r\n        fullWidth={true}\r\n        inputRef={mdText}\r\n        value={mash(text)}\r\n        color=\"secondary\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Clipboard;\r\n","import React, { useState } from \"react\";\r\nimport { IconButton, InputBase, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Search(props) {\r\n  const { setQueryResults } = props;\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n\r\n    setQueryResults([]);\r\n\r\n    fetch(`https://api.open5e.com/monsters/?search=${query}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setQueryResults(res.results);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: \"2px 4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root} onSubmit={search}>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Creature\"\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        autoFocus\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport QueryResults from \"../queryResults\";\r\nimport Clipboard from \"../clipboard\";\r\nimport Search from \"../search\";\r\nimport \"./app.css\";\r\n\r\nfunction App() {\r\n  const theme = \"dark\";\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: theme,\r\n    },\r\n  });\r\n  const [text, setText] = useState(\"\");\r\n  const [queryResults, setQueryResults] = useState([]);\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container maxWidth=\"sm\" className=\"App\">\r\n        <Typography variant=\"h4\" gutterBottom color=\"secondary\">\r\n          Monster Markdown\r\n        </Typography>\r\n\r\n        <Search setQueryResults={setQueryResults} />\r\n\r\n        {queryResults.length > 0 && (\r\n          <QueryResults results={queryResults} setText={setText} />\r\n        )}\r\n\r\n        {text && <Clipboard text={text} />}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}